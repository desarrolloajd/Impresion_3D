# !Artillery Hornet
# printer_size: 230x230x250 Displays information on the Creality Sonic Pad

# See docs/Config_Reference.md for a description of parameters.

###fluidd set
[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z4.5 F300
    G90
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
    G28 X Y
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    G1 Y{y_park} F240
    M84
  CANCEL_PRINT_BASE

[stepper_x]
step_pin: PB14
dir_pin: PB13
enable_pin: !PB15
microsteps: 16
rotation_distance: 40
endstop_pin: !PA2
position_endstop: 220
position_max: 220
homing_speed: 50
second_homing_speed: 75

[stepper_y]
step_pin: PB10
dir_pin: PB2
enable_pin: !PB12
microsteps: 16
rotation_distance: 40
endstop_pin: !PA1
position_endstop: 0
position_max: 235
homing_speed: 050
second_homing_speed: 75

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
endstop_pin: !PA0
position_endstop: 0
position_max: 250
homing_speed: 25
second_homing_speed: 10

[extruder]
max_extrude_only_distance: 500.0
max_extrude_cross_section: 50.0
step_pin: PA7
dir_pin: !PA6
enable_pin: !PC4
rotation_distance: 7.362
microsteps: 16
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
control: pid
# tuned for stock hardware with 200 degree Celsius target
pid_Kp: 23.904
pid_Ki: 1.476
pid_Kd: 96.810
min_temp: 0
max_temp: 250
pressure_advance = 0.25
pressure_advance_smooth_time: 0.040


[heater_bed]
heater_pin: PA8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
control: pid
# tuned for stock hardware with 50 degree Celsius target
pid_Kp: 23.223
pid_Ki: 1.518
pid_Kd: 88.826
min_temp: 0
max_temp: 130


[verify_heater extruder]
check_gain_time: 200
hysteresis: 5

[fan]
pin: PC6
pin: PC8

[heater_fan hotend_fan]
pin: PC7
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[controller_fan stepper_fan]
pin: PC6
idle_timeout: 300
kick_start_time: 0.500


[mcu]
serial: /dev/serial/by-id/usb_serial_1
restart_method: command

# [mcu rpi]
# serial: /tmp/klipper_host_mcu

# [adxl345]
# cs_pin: rpi:None
# spi_speed: 2000000
# spi_bus: spidev2.0

# [resonance_tester]
# accel_chip: adxl345
# accel_per_hz: 70
# probe_points:
#     117.5,117.5,10


[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 34.483
shaper_type_y = mzv
shaper_freq_y = 55.556

[filament_switch_sensor filament_sensor]
pause_on_runout: false
switch_pin: ^!PC15

[bltouch]
sensor_pin: PC2       #signal check port ^stand for pull up
control_pin: PC3       #singal control prot
x_offset: 27.25
y_offset: -12.8
z_offset: 0          #z off_set configuration
speed: 20
stow_on_each_sample = false #high speed for bltoch,
samples: 1
probe_with_touch_mode = true

[safe_z_home]
home_xy_position:150,150
speed: 200
z_hop: 10
z_hop_speed: 10

[bed_mesh]
speed: 150
mesh_min: 10,10         #need to handle head distance with bl_touch
mesh_max: 210,210       #max probe range
probe_count: 3,3
fade_start: 1
fade_end: 10
fade_target: 0
algorithm: bicubic

[bed_screws]
screw1: 40,40
screw1_name: front left
screw2: 180,40
screw2_name: front right
screw3: 180,180
screw3_name: back right
screw4: 40,180
screw4_name: back left
speed: 50

#[display]
#lcd_type: uc1701
#cs_pin: PB6
#a0_pin: PC15
#rst_pin: PB5
#contrast: 60
#spi_bus:spi3a
#encoder_pins: ^PB3,^PB4
#click_pin: ^!PC14

[gcode_macro G29]				#界面中增加G29指令
gcode:
  G28
  bed_mesh_calibrate
  G1 X0 Y0 Z10 F4200

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 1500
max_z_velocity: 20
max_z_accel: 100
square_corner_velocity: 5.0

[include timelapse.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.060000, 0.095000, 0.062500, 0.047500, 0.110000
#*# 	-0.035000, -0.005000, -0.025000, -0.035000, 0.022500
#*# 	-0.050000, -0.025000, -0.037500, -0.055000, 0.010000
#*# 	0.032500, 0.047500, 0.022500, 0.002500, 0.067500
#*# 	0.170000, 0.175000, 0.157500, 0.145000, 0.217500
#*# tension = 0.2
#*# min_x = 15.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 5
#*# max_y = 190.0
#*# mesh_x_pps = 2
#*# max_x = 210.0